services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
    ports:
      - "80:80"

  theatre-db:
    image: postgres:16
    env_file:
      - ./etl/.env
#    environment:
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - theatre-db-data-dev:/var/lib/postgresql/data
      - ./database_dump.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 10s
      retries: 5

  elasticsearch:
    image: elasticsearch:8.6.2
    environment:
      - ES_JAVA_OPTS=-Xms200m -Xmx500m
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data-1:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7.4.0-alpine
    container_name: middle_redis
    restart: always
    volumes:
      - middle2_redis_data:/data


  etl-process:
    build: .
#    image: python:3.11
#    working_dir: /etl
#    command: >
#      bash -c "
#        ./wait-for-it.sh elasticsearch:9200 --
#        pip install --upgrade pip &&
#        pip install -r requirements.txt &&
#        python etl.py
#      "
    env_file:
      - ./etl/.env
#    environment:
#      - POSTGRES_HOST=theatre-db
#      - ELASTICSEARCH_HOST=elasticsearch
    depends_on:
      theatre-db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy


volumes:
  theatre-db-data-dev:
    external: True
  middle2_redis_data:
    external: True
  elasticsearch-data-1:
